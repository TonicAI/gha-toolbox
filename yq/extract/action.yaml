name: YQ Extract
description: Extracts one or more values from YAML input
inputs:
  input:
    required: true
    description: |
      Content or filepath, begin with file:// for filepath
  input-format:
    default: "yaml"
    description: Format of input, default is "yaml"
  selectors:
    required: true
    description: |
      New line separated GHA Output Names =  YQ selectors pais
        version=.version
        domain=.ingress.host
  debug:
    default: ${{ runner.debug }}
    description: Set to enable debug logging
runs:
  using: "composite"
  steps:
    - id: prepare
      shell: bash
      env:
        INPUT: ${{ inputs.input }}
        TMPDIR: ${{ runner.temp }}
      run: |
        #@begin=bash@
        if [[ $INPUT == file://* ]]; then
          echo "input-filepath=${INPUT#file://}" | tee -a "${GITHUB_OUTPUT}"
        fi
        DIR=$(mktemp -d -p $TMPDIR "yq.XXXXXX")
        echo "dir=$(realpath $DIR)" >> $GITHUB_OUTPUT
        #@end=bash@
    - id: input
      if: ${{ steps.prepare.outputs.input-filepath == '' }}
      uses: tonicai/gha-toolbox/files/generate@main
      with:
        filepath: ${{ steps.prepare.outputs.dir }}/input
        content: ${{ inputs.input }}
    - id: yq
      shell: bash
      env:
        COMMENT_PATTERN: "^ *#"
        INPUT: ${{ steps.input.outputs.filepath || steps.prepare.outputs.input-filepath }}
        INPUT_FORMAT: ${{ inputs.input-format }}
        SELECTORS: ${{ inputs.selectors }}
        CI_DEBUG: ${{ inputs.debug }}
      run: |
        #@begin=bash@
        while ifs= read -r line || [[ -n $line ]]; do
          if [ -z "${line}" ] || [[ $line =~ $COMMENT_PATTERN ]]; then
            continue
          fi
          gha_output=$(echo "${line}" | cut -f1 -d '=' | xargs)
          selector=$(echo "${line}" | cut -f2 -d '=' | xargs)
          eof=$(uuidgen)
          if [ -n "${CI_DEBUG}" ]; then
            echo "Ouput Name: ${gha_output}"
            echo "Selector: ${selector}"
          fi
          {
            echo "${gha_output}<<${eof}"
            yq e -Mr --output-format="${INPUT_FORMAT}" --input-format="${INPUT_FORMAT}" "${selector}" "${INPUT}" || exit 2
            echo "${eof}"
          } | tee -a "${GITHUB_OUTPUT}"
        done < <(printf '%s' "${SELECTORS}")
        #@end=bash@
